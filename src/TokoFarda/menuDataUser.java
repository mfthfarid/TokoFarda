/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package TokoFarda;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;


public class menuDataUser extends javax.swing.JPanel {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    private DefaultTableModel model;
    private Timer timer;

    
    public menuDataUser() {
        initComponents();
        conn = Koneksi.Koneksi.KoneksiDB();
        
        //memberi penamaan pada judul kolom
        model = new DefaultTableModel();
        tb_User.setModel(model);
        model.addColumn("Nama User");
        model.addColumn("Username");
        model.addColumn("Email");
        model.addColumn("Password");
        model.addColumn("Level");
        
        //membuat timer dengan delay 1000ms (1 dt) dan AcctionListener yang mempengaruhi label
        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                showDayDateTime();
            }
        });

        timer.start();
        getData();
    }
    
    void getData(){
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        try{
            //membuat statement pemanggilan data tabel barang dari database
            String sql = "select * from user order by Id_User ASC";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //penelusuran baris pada tabel barang dari database
            while(rs.next()) {
                Object[] obj = new Object[5];
                obj[0] = rs.getString("Nama_User");
                obj[1] = rs.getString("Username");
                obj[2] = rs.getString("Email");
                obj[3] = rs.getString("Password");
                obj[4] = rs.getString("Level");
                
                model.addRow(obj);
            }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    void PilihData(){
        int i = tb_User.getSelectedRow();
        
        //mengambil id user berdasarkan data yang dipilih
        String sql1 = "select * from user where Nama_User='" + model.getValueAt(i, 0).toString() + "'";
        String idUser = "";
        try{
            pst = conn.prepareStatement(sql1);
            rs = pst.executeQuery();

            if(rs.next()){
                session.setIdUser(rs.getString("Id_User")) ;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        txt_NamaUser.setText(model.getValueAt(i, 0).toString());
        txt_Username.setText(model.getValueAt(i, 1).toString());
        txt_Email.setText(model.getValueAt(i, 2).toString());
        txt_Password.setText(model.getValueAt(i, 3).toString());
        cmb_Level.setSelectedItem(model.getValueAt(i, 4).toString());
    }
    
    void Bersih(){
        txt_NamaUser.setText("");
        txt_Username.setText("");
        txt_Email.setText("");
        txt_Password.setText("");
        cmb_Level.setSelectedItem("--Select--");
        txt_Cari.setText("Cari...");
    }
    
    private void showDayDateTime() {
        Calendar calendar = Calendar.getInstance();
        Date now = new Date();
        SimpleDateFormat formatHari = new SimpleDateFormat("EEEE", new Locale("in", "ID"));
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String hari = formatHari.format(calendar.getTime());
        String dateTime = dateFormat.format(now);
        lb_tanggal.setText(hari + ", " + dateTime);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        lb_tanggal = new javax.swing.JLabel();
        Nama_user = new javax.swing.JLabel();
        Username = new javax.swing.JLabel();
        txt_Username = new javax.swing.JTextField();
        Email = new javax.swing.JLabel();
        txt_Email = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        txt_Password = new javax.swing.JPasswordField();
        cbk_ShowPassword = new javax.swing.JCheckBox();
        Level = new javax.swing.JLabel();
        cmb_Level = new javax.swing.JComboBox<>();
        btn_edit = new rojerusan.RSMaterialButtonRectangle();
        btn_hapus = new rojerusan.RSMaterialButtonRectangle();
        btn_refresh = new rojerusan.RSMaterialButtonRectangle();
        btn_tambah = new rojerusan.RSMaterialButtonRectangle();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_User = new javax.swing.JTable();
        txt_Cari = new javax.swing.JTextField();
        txt_NamaUser = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1170, 750));

        header.setBackground(new java.awt.Color(237, 237, 237));

        title.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        title.setText("Menu Data User");

        lb_tanggal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_tanggal.setText("Hari, Tanggal, Jam");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(title)
                .addContainerGap(982, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lb_tanggal)
                .addGap(29, 29, 29))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(title)
                .addGap(1, 1, 1)
                .addComponent(lb_tanggal)
                .addContainerGap())
        );

        Nama_user.setText("Nama User");

        Username.setText("Username");

        Email.setText("Email");

        Password.setText("Password");

        cbk_ShowPassword.setText("Show Password");
        cbk_ShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbk_ShowPasswordActionPerformed(evt);
            }
        });

        Level.setText("Level");

        cmb_Level.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmb_Level.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Admin", "Kasir", "Owner" }));

        btn_edit.setBackground(new java.awt.Color(255, 255, 0));
        btn_edit.setForeground(new java.awt.Color(0, 0, 0));
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_hapus.setBackground(new java.awt.Color(255, 0, 0));
        btn_hapus.setForeground(new java.awt.Color(0, 0, 0));
        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_refresh.setBackground(new java.awt.Color(102, 255, 102));
        btn_refresh.setForeground(new java.awt.Color(0, 0, 0));
        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        btn_tambah.setBackground(new java.awt.Color(51, 204, 255));
        btn_tambah.setForeground(new java.awt.Color(0, 0, 0));
        btn_tambah.setText("Tambah");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        tb_User.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_UserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_User);

        txt_Cari.setText("Cari...");
        txt_Cari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_CariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_CariFocusLost(evt);
            }
        });
        txt_Cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_CariKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Nama_user)
                    .addComponent(Username)
                    .addComponent(txt_Username)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Email)
                            .addComponent(Password)
                            .addComponent(cbk_ShowPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_Email)
                            .addComponent(txt_Password, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_Level, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Level)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(21, 21, 21))))
                    .addComponent(txt_NamaUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Cari, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(Nama_user)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_NamaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Username)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Email)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Password)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbk_ShowPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Level)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_Level, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_Cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 212, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tb_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_UserMouseClicked
        // TODO add your handling code here:
        PilihData();
    }//GEN-LAST:event_tb_UserMouseClicked

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        if(txt_NamaUser.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap isi nama user!!");
        } else if(txt_Username.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap isi username!!");
        } else if(txt_Email.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap isi email!!");
        } else if(txt_Password.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap isi password!!");
        } else if(cmb_Level.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Harap pilih level user!!");
        } else {
            //mengecek apakah email valid atau tidak
            String Email = txt_Email.getText();
            if(Email.matches("^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$")) {

                //mengecek apakah password valid atau tidak
                char[] PasswordChar = txt_Password.getPassword();
                String password = new String(PasswordChar);

                if(password.length() >= 8 && password.matches(".*\\d.*") && password.matches(".*[A-Z].*") && password.matches(".*[a-z].*")) {
                    try{
                        String NamaUser = txt_NamaUser.getText();
                        String Username = txt_Username.getText();
                        Object Level = cmb_Level.getSelectedItem();

                        String sql = "update user set Username='" +Username+ "',Nama_User='" +NamaUser+ "',Email='" +Email+ "',Password='" +password+ "',Level='" +Level+ "'where Id_User='" +session.getIdUser()+ "'";
                        pst = conn.prepareStatement(sql);
                        pst.execute();
                        JOptionPane.showMessageDialog(null, "Data Berhasil Diubah");
                        getData();
                        Bersih();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Password harus terdiri dari minimal 8 karakter dengan kombinasi angka, huruf besar, dan huruf kecil", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Email tidak valid", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        // TODO add your handling code here:
        int p = JOptionPane.showConfirmDialog(null,
            "Apakah benar-benar akan dihapus permanen?",
            "Delete",
            JOptionPane.YES_NO_OPTION
        );
        if (p == 0) {
            String sql = "delete from user where Id_User='" + session.getIdUser() + "'" ;
            try{
                pst = conn.prepareStatement(sql);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        getData();
        Bersih();
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        Bersih();
        getData();
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        
        if(txt_NamaUser.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap isi nama user!!");
        } else if(txt_Username.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap isi username!!");
        } else if(txt_Email.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap isi email!!");
        } else if(txt_Password.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap isi password!!");
        } else if(cmb_Level.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Harap pilih level user!!");
        } else {
            //mengecek apakah email valid atau tidak
           String Email = txt_Email.getText();
           if(Email.matches("^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$")) {

               //mengecek apakah password valid atau tidak
               char[] PasswordChar = txt_Password.getPassword();
               String password = new String(PasswordChar);

               if(password.length() >= 8 && password.matches(".*\\d.*") && password.matches(".*[A-Z].*") && password.matches(".*[a-z].*")) {
                   //fungsi insert data
                   try{
                       String sql = "insert into user (Username,Nama_User,Email,Password,Level)values(?,?,?,?,?)";
                       pst = conn.prepareStatement(sql);
                       pst.setString(1, txt_Username.getText());
                       pst.setString(2, txt_NamaUser.getText());
                       pst.setString(3, Email);
                       pst.setString(4, password);
                       pst.setObject(5, cmb_Level.getSelectedItem());

                       pst.execute();
                       JOptionPane.showMessageDialog(null, "Data Berhasil Ditambahkan");

                       getData();
                       Bersih();

                   } catch (Exception e) {
                       JOptionPane.showMessageDialog(null, e);
                   }
               } else {
                   JOptionPane.showMessageDialog(null, "Password harus terdiri dari minimal 8 karakter dengan kombinasi angka, huruf besar, dan huruf kecil", "Error", JOptionPane.ERROR_MESSAGE);
               }
           } else {
               JOptionPane.showMessageDialog(null, "Email tidak valid", "Error", JOptionPane.ERROR_MESSAGE);
           }   
        }
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void cbk_ShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbk_ShowPasswordActionPerformed
        // TODO add your handling code here:
        if(cbk_ShowPassword.isSelected()){
            txt_Password.setEchoChar((char)0);
        } else {
            txt_Password.setEchoChar('*');
        }
    }//GEN-LAST:event_cbk_ShowPasswordActionPerformed

    private void txt_CariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CariKeyTyped
        // TODO add your handling code here:
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        try{
            String sql = "select * from user where Nama_User like '%" +txt_Cari.getText()+ "%'";

            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            while(rs.next()) {
                Object[] obj = new Object[4];
                obj[0] = rs.getString("Nama_User");
                obj[1] = rs.getString("Email");
                obj[2] = rs.getString("Password");
                obj[3] = rs.getString("Level");

                model.addRow(obj);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_CariKeyTyped

    private void txt_CariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_CariFocusGained
        // TODO add your handling code here:
        String cari = txt_Cari.getText();
        if(cari.equals("Cari...")){
            txt_Cari.setText("");
        }
    }//GEN-LAST:event_txt_CariFocusGained

    private void txt_CariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_CariFocusLost
        // TODO add your handling code here:
        String cari = txt_Cari.getText();
        if(cari.equals("")||cari.equals("Cari")){
            txt_Cari.setText("Cari");
        }
    }//GEN-LAST:event_txt_CariFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Email;
    private javax.swing.JLabel Level;
    private javax.swing.JLabel Nama_user;
    private javax.swing.JLabel Password;
    private javax.swing.JLabel Username;
    private rojerusan.RSMaterialButtonRectangle btn_edit;
    private rojerusan.RSMaterialButtonRectangle btn_hapus;
    private rojerusan.RSMaterialButtonRectangle btn_refresh;
    private rojerusan.RSMaterialButtonRectangle btn_tambah;
    private javax.swing.JCheckBox cbk_ShowPassword;
    private javax.swing.JComboBox<String> cmb_Level;
    private javax.swing.JPanel header;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_tanggal;
    private javax.swing.JTable tb_User;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txt_Cari;
    private javax.swing.JTextField txt_Email;
    private javax.swing.JTextField txt_NamaUser;
    private javax.swing.JPasswordField txt_Password;
    private javax.swing.JTextField txt_Username;
    // End of variables declaration//GEN-END:variables
}
